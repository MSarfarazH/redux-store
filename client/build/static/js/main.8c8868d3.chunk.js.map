{"version":3,"sources":["utils/helpers.js","utils/actions.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","pages/Success.js","utils/reducers.js","utils/store.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ProductItem","item","image","price","quantity","state","useSelector","dispatch","useDispatch","cart","className","to","alt","src","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","currentCategory","useQuery","loading","data","useEffect","products","forEach","then","length","filter","category","map","spinner","CategoryMenu","categoryData","categories","id","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","a","getCart","res","redirectToCheckout","sessionId","checkout","session","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Success","addOrder","setTimeout","saveOrder","reducer","action","newState","createStore","reducers","client","ApolloClient","operation","setContext","headers","authorization","uri","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8c8868d3.chunk.js","sourcesContent":["export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ProductItem(item) {\r\n  const { image, name, _id, price, quantity } = item;\r\n\r\n  const state = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img alt={name} src={`/images/${image}`} />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>\r\n          {quantity} {pluralize(\"item\", quantity)} in stock\r\n        </div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport ProductItem from \"../ProductItem\";\r\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\r\nimport spinner from \"../../assets/spinner.gif\";\r\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction ProductList() {\r\n  const state = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction CategoryMenu() {\r\n  const state = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  const { categories } = state;\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise(\"categories\", \"put\", category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise(\"categories\", \"get\").then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;","import React from 'react';\r\n\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const dispatch = useDispatch(); \r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from \"react\";\r\nimport CartItem from \"../CartItem\";\r\nimport Auth from \"../../utils/auth\";\r\nimport \"./style.css\";\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\n\r\nconst Cart = () => {\r\n  const state = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise(\"cart\", \"get\");\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <CategoryMenu />\r\n      <ProductList />\r\n      <Cart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Cart from \"../components/Cart\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport spinner from \"../assets/spinner.gif\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from \"../utils/actions\";\r\n\r\nfunction Detail() {\r\n  const state = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise(\"cart\", \"put\", {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise(\"products\", \"put\", product);\r\n      });\r\n    }\r\n    else if (!loading) {\r\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  return (\r\n    <>\r\n      {currentProduct ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">← Back to Products</Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>{currentProduct.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>${currentProduct.price}{\" \"}\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">\r\n              Order History\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\r\n          -Shop-Shop\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART,\r\n} from './actions';\r\n\r\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    // Returns a copy of state with an update products array. We use the action.products property and spread it's contents into the new array.\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\r\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map((product) => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity;\r\n          }\r\n          return product;\r\n        }),\r\n      };\r\n\r\n    // First we iterate through each item in the cart and check to see if the `product._id` matches the `action._id`\r\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((product) => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      // Then we return a copy of state and check to see if the cart is empty.\r\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n\r\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\r\n    // This saves us from a crash.\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\nexport default store; ","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport ApolloClient from \"apollo-boost\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Detail from \"./pages/Detail\";\r\nimport NoMatch from \"./pages/NoMatch\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Nav from \"./components/Nav\";\r\nimport OrderHistory from \"./pages/OrderHistory\";\r\nimport Success from \"./pages/Success\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./utils/store\";\r\n\r\nconst client = new ApolloClient({\r\n  request: (operation) => {\r\n    const token = localStorage.getItem(\"id_token\");\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : \"\",\r\n      },\r\n    });\r\n  },\r\n  uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Provider store={store}>\r\n            <Nav />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/signup\" component={Signup} />\r\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\r\n              <Route exact path=\"/products/:id\" component={Detail} />\r\n              <Route exact path=\"/success\" component={Success} />\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n          </Provider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}